{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Volatile coin","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOePC0oQphFBDsVNP9U3YLz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"NgdikJ0i226a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628688739528,"user_tz":-540,"elapsed":12278,"user":{"displayName":"Heo Joonsu","photoUrl":"","userId":"05022602770235570742"}},"outputId":"80b70f9e-b705-4389-dc4c-e68a2ec46d9b"},"source":["!pip install ccxt"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting ccxt\n","  Downloading ccxt-1.54.72-py2.py3-none-any.whl (2.0 MB)\n","\u001b[K     |████████████████████████████████| 2.0 MB 5.2 MB/s \n","\u001b[?25hCollecting cryptography>=2.6.1\n","  Downloading cryptography-3.4.7-cp36-abi3-manylinux2014_x86_64.whl (3.2 MB)\n","\u001b[K     |████████████████████████████████| 3.2 MB 44.0 MB/s \n","\u001b[?25hRequirement already satisfied: certifi>=2018.1.18 in /usr/local/lib/python3.7/dist-packages (from ccxt) (2021.5.30)\n","Requirement already satisfied: requests>=2.18.4 in /usr/local/lib/python3.7/dist-packages (from ccxt) (2.23.0)\n","Requirement already satisfied: setuptools>=38.5.1 in /usr/local/lib/python3.7/dist-packages (from ccxt) (57.2.0)\n","Collecting aiohttp<3.8,>=3.7.4\n","  Downloading aiohttp-3.7.4.post0-cp37-cp37m-manylinux2014_x86_64.whl (1.3 MB)\n","\u001b[K     |████████████████████████████████| 1.3 MB 51.1 MB/s \n","\u001b[?25hCollecting aiodns>=1.1.1\n","  Downloading aiodns-3.0.0-py3-none-any.whl (5.0 kB)\n","Collecting yarl==1.6.3\n","  Downloading yarl-1.6.3-cp37-cp37m-manylinux2014_x86_64.whl (294 kB)\n","\u001b[K     |████████████████████████████████| 294 kB 56.5 MB/s \n","\u001b[?25hRequirement already satisfied: idna>=2.0 in /usr/local/lib/python3.7/dist-packages (from yarl==1.6.3->ccxt) (2.10)\n","Collecting multidict>=4.0\n","  Downloading multidict-5.1.0-cp37-cp37m-manylinux2014_x86_64.whl (142 kB)\n","\u001b[K     |████████████████████████████████| 142 kB 72.6 MB/s \n","\u001b[?25hRequirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from yarl==1.6.3->ccxt) (3.7.4.3)\n","Collecting pycares>=4.0.0\n","  Downloading pycares-4.0.0-cp37-cp37m-manylinux2010_x86_64.whl (291 kB)\n","\u001b[K     |████████████████████████████████| 291 kB 76.7 MB/s \n","\u001b[?25hCollecting async-timeout<4.0,>=3.0\n","  Downloading async_timeout-3.0.1-py3-none-any.whl (8.2 kB)\n","Requirement already satisfied: chardet<5.0,>=2.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp<3.8,>=3.7.4->ccxt) (3.0.4)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp<3.8,>=3.7.4->ccxt) (21.2.0)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.7/dist-packages (from cryptography>=2.6.1->ccxt) (1.14.6)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.7/dist-packages (from cffi>=1.12->cryptography>=2.6.1->ccxt) (2.20)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.18.4->ccxt) (1.24.3)\n","Installing collected packages: multidict, yarl, pycares, async-timeout, cryptography, aiohttp, aiodns, ccxt\n","Successfully installed aiodns-3.0.0 aiohttp-3.7.4.post0 async-timeout-3.0.1 ccxt-1.54.72 cryptography-3.4.7 multidict-5.1.0 pycares-4.0.0 yarl-1.6.3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"laTn1RnHabGo","executionInfo":{"status":"ok","timestamp":1628689670933,"user_tz":-540,"elapsed":877,"user":{"displayName":"Heo Joonsu","photoUrl":"","userId":"05022602770235570742"}},"outputId":"68ed4c75-b786-4215-a353-d8d0815cb4fc"},"source":["import ccxt\n","binance = ccxt.binance({\n","    'apiKey': 'ncaGKCQNu9KS8kEwF3Jri37YjsOkKCfLGiKZcq87iThEU3QZIWdxOyeQLUvOCPpG',\n","    'secret': 'tvSQ36Idx7W1QwiMx5ycduhziLQZaHUbhnHZGhqlSRaF6VrkP8QqsLY3LCidthdJ',\n","})\n","\n","balance = binance.fetch_balance()\n","print(balance['RSR']['total'])"],"execution_count":17,"outputs":[{"output_type":"stream","text":["23641.15808014\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2c08LundabJO","executionInfo":{"status":"ok","timestamp":1628689644042,"user_tz":-540,"elapsed":216,"user":{"displayName":"Heo Joonsu","photoUrl":"","userId":"05022602770235570742"}},"outputId":"cb0fb31d-2c8d-4524-e67a-df27c4e3ba74"},"source":["order"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'amount': 23660.0,\n"," 'average': None,\n"," 'clientOrderId': 'x-R4BD3S82d9c2a2fd9a2d14838ec40e',\n"," 'cost': 0.0,\n"," 'datetime': '2021-08-11T13:45:59.014Z',\n"," 'fee': None,\n"," 'fees': [],\n"," 'filled': 0.0,\n"," 'id': '256936851',\n"," 'info': {'clientOrderId': 'x-R4BD3S82d9c2a2fd9a2d14838ec40e',\n","  'cummulativeQuoteQty': '0.00000000',\n","  'executedQty': '0.00000000',\n","  'fills': [],\n","  'orderId': '256936851',\n","  'orderListId': '-1',\n","  'origQty': '23660.00000000',\n","  'price': '0.04170000',\n","  'side': 'BUY',\n","  'status': 'NEW',\n","  'symbol': 'RSRUSDT',\n","  'timeInForce': 'GTC',\n","  'transactTime': '1628689559014',\n","  'type': 'LIMIT'},\n"," 'lastTradeTimestamp': None,\n"," 'postOnly': False,\n"," 'price': 0.0417,\n"," 'remaining': 23660.0,\n"," 'side': 'buy',\n"," 'status': 'open',\n"," 'stopPrice': None,\n"," 'symbol': 'RSR/USDT',\n"," 'timeInForce': 'GTC',\n"," 'timestamp': 1628689559014,\n"," 'trades': [],\n"," 'type': 'limit'}"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"agwH8F3kabME","executionInfo":{"status":"ok","timestamp":1628689891728,"user_tz":-540,"elapsed":379,"user":{"displayName":"Heo Joonsu","photoUrl":"","userId":"05022602770235570742"}},"outputId":"74048369-b079-4b61-e51d-b813ef49b7a2"},"source":["resp = binance.fetch_order(256936851, \"RSR/USDT\")\n","resp"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'amount': 23660.0,\n"," 'average': 0.0417,\n"," 'clientOrderId': 'x-R4BD3S82d9c2a2fd9a2d14838ec40e',\n"," 'cost': 986.622,\n"," 'datetime': '2021-08-11T13:45:59.014Z',\n"," 'fee': None,\n"," 'fees': [],\n"," 'filled': 23660.0,\n"," 'id': '256936851',\n"," 'info': {'clientOrderId': 'x-R4BD3S82d9c2a2fd9a2d14838ec40e',\n","  'cummulativeQuoteQty': '986.62200000',\n","  'executedQty': '23660.00000000',\n","  'icebergQty': '0.00000000',\n","  'isWorking': True,\n","  'orderId': '256936851',\n","  'orderListId': '-1',\n","  'origQty': '23660.00000000',\n","  'origQuoteOrderQty': '0.00000000',\n","  'price': '0.04170000',\n","  'side': 'BUY',\n","  'status': 'FILLED',\n","  'stopPrice': '0.00000000',\n","  'symbol': 'RSRUSDT',\n","  'time': '1628689559014',\n","  'timeInForce': 'GTC',\n","  'type': 'LIMIT',\n","  'updateTime': '1628689559589'},\n"," 'lastTradeTimestamp': None,\n"," 'postOnly': False,\n"," 'price': 0.0417,\n"," 'remaining': 0.0,\n"," 'side': 'buy',\n"," 'status': 'closed',\n"," 'stopPrice': None,\n"," 'symbol': 'RSR/USDT',\n"," 'timeInForce': 'GTC',\n"," 'timestamp': 1628689559014,\n"," 'trades': [],\n"," 'type': 'limit'}"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"u1mkTl-LYHGA"},"source":["# **Volatile COin**"]},{"cell_type":"code","metadata":{"id":"Y1OX7zp_2vCU"},"source":["import random\n","import sys\n","from datetime import datetime\n","\n","from binance_trade_bot.auto_trader import AutoTrader\n","\n","\n","class Strategy(AutoTrader):\n","    def initialize(self):\n","        super().initialize()\n","        self.initialize_current_coin()\n","\n","    def scout(self):\n","        \"\"\"\n","        Scout for potential jumps from the current coin to another coin\n","        \"\"\"\n","        current_coin = self.db.get_current_coin()\n","        # Display on the console, the current coin+Bridge, so users can see *some* activity and not think the bot has\n","        # stopped. Not logging though to reduce log size.\n","        print(\n","            f\"{datetime.now()} - CONSOLE - INFO - I am scouting the best trades. \"\n","            f\"Current coin: {current_coin + self.config.BRIDGE} \",\n","            end=\"\\r\",\n","        )\n","\n","        current_coin_price = self.manager.get_ticker_price(current_coin + self.config.BRIDGE)\n","\n","        if current_coin_price is None:\n","            self.logger.info(\"Skipping scouting... current coin {} not found\".format(current_coin + self.config.BRIDGE))\n","            return\n","\n","        self._jump_to_best_coin(current_coin, current_coin_price)\n","\n","    def bridge_scout(self):\n","        current_coin = self.db.get_current_coin()\n","        if self.manager.get_currency_balance(current_coin.symbol) > self.manager.get_min_notional(\n","            current_coin.symbol, self.config.BRIDGE.symbol\n","        ):\n","            # Only scout if we don't have enough of the current coin\n","            return\n","        new_coin = super().bridge_scout()\n","        if new_coin is not None:\n","            self.db.set_current_coin(new_coin)\n","\n","    def initialize_current_coin(self):\n","        \"\"\"\n","        Decide what is the current coin, and set it up in the DB.\n","        \"\"\"\n","        if self.db.get_current_coin() is None:\n","            current_coin_symbol = self.config.CURRENT_COIN_SYMBOL\n","            if not current_coin_symbol:\n","                current_coin_symbol = random.choice(self.config.SUPPORTED_COIN_LIST)\n","\n","            self.logger.info(f\"Setting initial coin to {current_coin_symbol}\")\n","\n","            if current_coin_symbol not in self.config.SUPPORTED_COIN_LIST:\n","                sys.exit(\"***\\nERROR!\\nSince there is no backup file, a proper coin name must be provided at init\\n***\")\n","            self.db.set_current_coin(current_coin_symbol)\n","\n","            # if we don't have a configuration, we selected a coin at random... Buy it so we can start trading.\n","            if self.config.CURRENT_COIN_SYMBOL == \"\":\n","                current_coin = self.db.get_current_coin()\n","                self.logger.info(f\"Purchasing {current_coin} to begin trading\")\n","                self.manager.buy_alt(current_coin, self.config.BRIDGE)\n","                self.logger.info(\"Ready to start trading\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Gi_i5mdB2zMR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1627303671411,"user_tz":-540,"elapsed":1596,"user":{"displayName":"Heo Joonsu","photoUrl":"","userId":"05022602770235570742"}},"outputId":"7d4bc658-67fd-4175-9920-98e8515822eb"},"source":["!git clone https://github.com/edeng23/binance-trade-bot"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Cloning into 'binance-trade-bot'...\n","remote: Enumerating objects: 1164, done.\u001b[K\n","remote: Counting objects: 100% (61/61), done.\u001b[K\n","remote: Compressing objects: 100% (37/37), done.\u001b[K\n","remote: Total 1164 (delta 26), reused 33 (delta 24), pack-reused 1103\u001b[K\n","Receiving objects: 100% (1164/1164), 483.33 KiB | 1.96 MiB/s, done.\n","Resolving deltas: 100% (695/695), done.\n"],"name":"stdout"}]}]}